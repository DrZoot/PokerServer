== Actor Notes
  the actor include brings several methods with it. 
  actor methods that should be exposed to other actors are done so with the expose class method which takes symbols of the methods that need
  to be exposed. 
  requests can be sent to other actors using the method request. request takes several arguments, (type, payload = '', opts = {}, &blk).
    type refers to the exposed method that is being triggered on the recieving nanite, i suppose type was used because its a "type" of call?
    payload is the data that is to be sent along to the method triggered (it seems possible to specify different encoding schemes for this data, default is standard ruby but a json one seems to exist)
    opts are
      @type             = type
      @payload          = payload
      @from             = opts[:from]
      @token            = opts[:token]
      @reply_to         = opts[:reply_to]
      @selector         = opts[:selector]
      @target           = opts[:target]
      @persistent       = opts[:persistent]
      @tags             = opts[:tags] || []
      TODO update this with descriptions / definitions for all the options
      :selector<Symbol>:: Method for selecting an actor.  Default is :least_loaded.
        :least_loaded:: Pick the nanite which has the lowest load.
        :all:: Send the ] to all nanites which respond to the service.
        :random:: Randomly pick a nanite.
        :rr: Select a nanite according to round robin ordering.
      :target<String>:: Select a specific nanite via identity, rather than using
        a selector.
      :persistent<Boolean>:: Instructs the AMQP broker to save the message to persistent
        storage so that it isnt lost when the broker is restarted.
        Default is false unless the mapper was started with the --persistent flag.
        
== Git Notes
  = Common Git Commands
   - git add : add a file or directory (recursive) to the git repo
   - git rm : remove a file or directory from the git repo
   - git mv : move (rename) a file or directory in the git repo
   - git init : create a new git repo in the current directory
   - git commit : commit the current changes to the repo (commits to the local repo, not linked network ones)
   - git commit -a : using the -a switch with the commit command to automatically "add" changes from all known files (i.e. all files that are already
                     listed in the index) and to automatically "rm" files in the index that have been removed from the working tree, and then perform the
                     actual commit
   - git log : shows a list of recent commits and there sha1 values
   - git reset : use with --hard param will reset dir back to last commit (or with sha1 value back to specified commit)
   - git checkout : can be used to soft reset the repo back to a previous point in time, does not delete any data.
   - git checkout master : when git checkout has been used to return to a point in the past, this will bring you back to the present.
   - git checkout master~5 : checkout the commit five back in the master branch
   - git clone <repo> : clone the entire repo at the <repo> address.
   - git pull : update the current repo to the latest version from some remote repo
           -

